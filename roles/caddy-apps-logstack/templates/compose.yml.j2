# based on https://github.com/jgraph/docker-drawio/blob/dev/self-contained/docker-compose.yml

x-common: &common
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped


networks:
  metrics_net:

services:
  # https://hub.docker.com/r/bitnami/influxdb
  influxdb:
    <<: *common
    image: bitnami/influxdb:latest
    container_name: influxdb
    networks:
      - metrics_net
      - main_net
    environment:
      # admin vars
      - INFLUXDB_INIT_MODE=setup
      - INFLUXDB_ADMIN_ORG=home # will be copied for user org unless otherwise specified in INFLUXDB_USER_ORG
      - INFLUXDB_ADMIN_USER=$INIT_ADMIN_USERNAME
      - INFLUXDB_ADMIN_USER_PASSWORD=$INIT_ADMIN_PASSWORD
      - INFLUXDB_ADMIN_USER_TOKEN={{ influxdb_api_token }}
      # readonly user
      - INFLUXDB_READ_USER=$INIT_USERNAME
      - INFLUXDB_READ_USER_PASSWORD=$INIT_PASSWORD
      # write user (used for telegraf and pushing data)
      - INFLUXDB_WRITE_USER=writeuser
      - INFLUXDB_WRITE_USER_PASSWORD=pafoisehdiosntroie
    ports:
      - '8086:8086'
      - '8086:8086/udp'
    volumes:
      - ./data/influxdb:/var/lib/influxdb2
      - ./config/influxdb:/etc/influxdb2


  grafana:
    <<: *common
    image: bitnami/grafana:latest
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - influxdb
    networks:
      - main_net
      - metrics_net
    environment:
    # https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#override-configuration-with-environment-variables
      - GF_SECURITY_ADMIN_USER=$INIT_ADMIN_USERNAME
      - GF_SECURITY_ADMIN_PASSWORD=$INIT_ADMIN_PASSWORD
      - GF_INSTALL_PLUGINS=grafana-worldmap-panel
    # ports:
    #   - '3000:3000'
    volumes:
      - ./config/grafana:/etc/grafana
      - ./data/grafana:/var/lib/grafana
  

  prometheus:
    <<: *common
    container_name: prometheus
    image: bitnami/prometheus:latest
    networks:
    - metrics_net
    - main_net
    ports:
      - 9000:9090
    volumes:
      - ./config/prometheus:/etc/prometheus
      - ./data/prometheus:/var/lib/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml


  loki:
    <<: *common
    container_name: loki
    image: bitnami/grafana-loki:latest
    networks:
      - metrics_net
    volumes:
      - ./config/loki:/etc/loki
    ports:
      - "3100:3100"
    command: --config.file=/etc/loki/loki.yml

  promtail:
    <<: *common
    container_name: promtail
    image: bitnami/promtail:latest
    networks:
      - metrics_net
    volumes:
      - /var/log:/var/log:ro
      - ./config/promtail:/etc/promtail
    ports:
      - "1514:1514" # this is only needed if you are going to send syslogs
    command: -config.file=/etc/promtail/promtail.yml


