
include:
  - compose-shared.yml
  - ${TELEGRAF_COMPOSE_PATH:-/dev/null}
  - ${KEYCLOAK_COMPOSE_PATH:-/dev/null}
  - ${MINIO_COMPOSE_PATH:-/dev/null}
  - ${YOUTRACK_COMPOSE_PATH:-/dev/null}
  - ${DRAW_COMPOSE_PATH:-/dev/null}
  - ${TEABLE_COMPOSE_PATH:-/dev/null}
  - ${OUTLINE_COMPOSE_PATH:-/dev/null}
  - ${SEAFILE_COMPOSE_PATH:-/dev/null}
  - ${GRIST_COMPOSE_PATH:-/dev/null}
  - ${N8N_COMPOSE_PATH:-/dev/null}
  - ${LOGSTACK_COMPOSE_PATH:-/dev/null}
  - ${NODERED_COMPOSE_PATH:-/dev/null}
  - ${MOSQUITTO_COMPOSE_PATH:-/dev/null}
  - ${HASS_COMPOSE_PATH:-/dev/null}
  - ${UPTIMEKUMA_COMPOSE_PATH:-/dev/null}
  - ${NEXTCLOUD_COMPOSE_PATH:-/dev/null}
  - ${VAULTWARDEN_COMPOSE_PATH:-/dev/null}
  - ${GITEA_COMPOSE_PATH:-/dev/null}
  - ${IMMICH_COMPOSE_PATH:-/dev/null}
  - ${NETBOX_COMPOSE_PATH:-/dev/null}
  - ${SLURPIT_COMPOSE_PATH:-/dev/null}
  - ${OPENNMS_COMPOSE_PATH:-/dev/null}
  - ${WAZUH_COMPOSE_PATH:-/dev/null}
  - ${OPENWEBUI_COMPOSE_PATH:-/dev/null}
  - ${OPENTTS_COMPOSE_PATH:-/dev/null}
  - ${KOKORO_COMPOSE_PATH:-/dev/null}
  - ${SPEEDTRACKER_COMPOSE_PATH:-/dev/null}

# Keys common to some of the core services that we always to automatically restart on failure
x-common: &common
  security_opt:
    - no-new-privileges:true
  restart: always

services:
  socket-proxy:
    container_name: socket-proxy
    image: tecnativa/docker-socket-proxy
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      socket_proxy:
        ipv4_address: 192.168.200.254 # You can specify a static IP
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    env_file:
      - .socketproxy.env


  ###################################################### FRONTEND
  caddy:
    <<: *common
    networks:
      main_net:
        ipv4_address: 192.168.201.254
    container_name: caddy
    user: {{ ansible_uid }}:{{ ansible_gid }}
    build:
      context: ./caddy
      dockerfile: Dockerfile
    volumes:
      - $CONFIGDIR/Caddyfile:/etc/caddy/Caddyfile
      - $CONFIGDIR/caddy-apps:/etc/caddy/caddy-apps
      - $CONFIGDIR/caddy-apps-sni:/etc/caddy/caddy-apps-sni
      - $DATADIR/logs:/var/log/caddy
      - $DATADIR/appdata/caddy_data:/data
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    labels:
      - com.centurylinklabs.watchtower.enable=false


  ##################################################### base nginx site
  base-nginx:
    container_name: base-nginx
    image: nginx
    <<: *common
    networks:
      - main_net

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    # command: --run-once # will run once and stop
    restart: always
    volumes:
      # when docker auth is needed
      - $CONFIGDIR/watchtower/config.json:/config.json:ro
    security_opt:
      - no-new-privileges:true
    networks:
      socket_proxy:
    environment:
      - DOCKER_HOST=tcp://socket-proxy:2375
      ## ignore updating containers only with `com.centurylinklabs.watchtower.enable=false`
      - WATCHTOWER_LABEL_ENABLE=false
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LOG_LEVEL=info
      - TZ=$TZ
      - WATCHTOWER_SCHEDULE=22 22 * * * # at 22:22 every day
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_TITLE_TAG=${HOSTNAME}
      - WATCHTOWER_NOTIFICATION_URL=${PUSHOVER_URL}