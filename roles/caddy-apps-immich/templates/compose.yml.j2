x-common-keys-apps: &common-keys-apps
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

networks:
  immich_net:
    driver: bridge

volumes:
  model-cache:

services:
  immich-db:
    container_name: immich-db
    networks:
      - immich_net
    <<: *common-keys-apps
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='${DB_NAME}' --username='${DB_USER}' || exit 1; Chksum="$$(psql --dbname='${DB_NAME}' --username='${DB_USER}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: ["postgres", "-c", "shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]
    labels:
      - com.centurylinklabs.watchtower.enable=false



  # immich-db:
  #   image: bitnami/postgresql:17
  #   environment:
  #     POSTGRESQL_DATABASE: ${DB_NAME}
  #     POSTGRESQL_USERNAME: ${DB_USER}
  #     POSTGRESQL_PASSWORD: ${DB_PASSWORD}
  #   # ports:
  #   #   - 5432:5432
  #   volumes:
  #     # permissions:  chown -R 1001:1001 ./data/postgres
  #     - ./data/postgresql:/var/lib/postgresql/data
  #   networks:
  #     - immich_net

  immich-redis:
    <<: *common-keys-apps
    container_name: immich-redis
    image: bitnami/redis
    environment:
      REDIS_PASSWORD: "{{ redis_password }}"
    networks:
      - immich_net
    volumes:
      - ./data/redis:/bitnami/redis/data


  immich:
    container_name: immich
    networks:
      - main_net
      - immich_net
    <<: *common-keys-apps
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      - /mnt/immich:/usr/src/app/upload
      - ./config/immich.json:/root/immich.json
    environment:
    # https://immich.app/docs/install/environment-variables#docker-compose
      IMMICH_VERSION: release
      IMMICH_ENV: production
      IMMICH_TRUSTED_PROXIES: '192.168.201.254'
      IMMICH_CONFIG_FILE: /root/immich.json
      DB_URL: ${DB_URL}
      DB_USERNAME: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE_NAME: ${DB_NAME}
      TZ: ${TZ}
      REDIS_URL: 'redis://default:{{ redis_password }}@immich-redis:6379'
      REDIS_USERNAME: default
      REDIS_PASSWORD: "{{ redis_password }}"
      REDIS_HOSTNAME: immich-redis
      
    # ports:
    #   - 2283:3001
    depends_on:
      - immich-redis
      - immich-db

  immich-ml:
    container_name: immich-ml
    networks:
      - immich_net
    <<: *common-keys-apps
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    env_file:
      - .env
